apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakRealm
metadata:
  name: rightcrowd-core-realm
spec:
  realmId: rightcrowd-core
  displayName: rightcrowd-core
  pruneRealm: false
  claimRealm: true
  representation:
    enabled: true
    eventsListeners:
      - jboss-logging
      - metrics-listener
  realmImports:
    - ifResourceExists: OVERWRITE
      import:
        roles:
          realm:
            - name: offline_access
              description: ${role_offline-access}
              composite: false
              clientRole: false
              attributes: {}
            - name: default-roles-rightcrowd-core
              description: ${role_default-roles}
              composite: true
              composites:
                realm: 
                  - offline_access
                client:
                  tenant-manager:
                    - tenman-user
                  account:
                    - manage-account
                    - view-profile
              clientRole: false
            - name: uma_authorization
              description: ${role_uma_authorization}
              composite: false
              clientRole: false
              attributes: {}
          client:
            grafana-oauth:
            - name: admin
              clientRole: true
            - name: viewer
              clientRole: true
            - name: editor
              clientRole: true
            tenant-manager:
            - name: tenman-admin
              clientRole: true
            - name: tenman-user
              clientRole: true
            vault:
            - name: vault-admin
              clientRole: true
            - name: vault-operator
              clientRole: true
        groups:
        - name: ArgoCDAdmins
          path: "/ArgoCDAdmins"
        - name: ArgoCDOperator
          path: "/ArgoCDOperator"
        clientScopes:
        - id: 9d7de584-3cfc-4db1-ac34-5e126fad3c03
          name: groups
          description: ''
          protocol: openid-connect
          attributes:
            include.in.token.scope: 'true'
            display.on.consent.screen: 'true'
            gui.order: ''
            consent.screen.text: ''
          protocolMappers:
          - id: 42c46b23-025e-4845-9f22-25554b73af0f
            name: groups
            protocol: openid-connect
            protocolMapper: oidc-group-membership-mapper
            consentRequired: false
            config:
              full.path: 'false'
              userinfo.token.claim: 'true'
              multivalued: 'true'
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: groups

        - name: roles
          description: OpenID Connect scope for add user roles to the access token
          protocol: openid-connect
          protocolMappers:
          - name: realm roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              multivalued: 'true'
              userinfo.token.claim: 'false'
              user.attribute: foo
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: roles
              jsonType.label: String
          - name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            consentRequired: false
            config:
              multivalued: 'true'
              userinfo.token.claim: 'false'
              user.attribute: foo
              id.token.claim: 'true'
              access.token.claim: 'true'
              claim.name: roles
              jsonType.label: String
          - name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
            config: {}

        - name: email
          description: 'OpenID Connect built-in scope: email'
          protocol: openid-connect
          attributes:
            include.in.token.scope: "true"
            display.on.consent.screen: "true"
            consent.screen.text: ${emailScopeConsentText}
          protocolMappers:
            - name: email verified
              protocol: openid-connect
              protocolMapper: oidc-usermodel-property-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: emailVerified
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: email_verified
                jsonType.label: boolean
            - name: email
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: email
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: email
                jsonType.label: String

        - name: profile
          description: 'OpenID Connect built-in scope: profile'
          protocol: openid-connect
          attributes:
            include.in.token.scope: "true"
            display.on.consent.screen: "true"
            consent.screen.text: ${profileScopeConsentText}
          protocolMappers:
            - name: given name
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: firstName
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: given_name
                jsonType.label: String
            - name: username
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: username
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: preferred_username
                jsonType.label: String
            - name: family name
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: lastName
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: family_name
                jsonType.label: String
            - name: full name
              protocol: openid-connect
              protocolMapper: oidc-full-name-mapper
              consentRequired: false
              config:
                id.token.claim: "true"
                access.token.claim: "true"
                userinfo.token.claim: "true"
            - name: gender
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: gender
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: gender
                jsonType.label: String
            - name: birthdate
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: birthdate
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: birthdate
                jsonType.label: String
            - name: website
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: website
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: website
                jsonType.label: String
            - name: middle name
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: middleName
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: middle_name
                jsonType.label: String
            - name: picture
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: picture
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: picture
                jsonType.label: String
            - name: zoneinfo
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: zoneinfo
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: zoneinfo
                jsonType.label: String
            - name: updated at
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: updatedAt
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: updated_at
                jsonType.label: long
            - name: locale
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: locale
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: locale
                jsonType.label: String
            - name: nickname
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: nickname
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: nickname
                jsonType.label: String
            - name: profile
              protocol: openid-connect
              protocolMapper: oidc-usermodel-attribute-mapper
              consentRequired: false
              config:
                userinfo.token.claim: "true"
                user.attribute: profile
                id.token.claim: "true"
                access.token.claim: "true"
                claim.name: profile
                jsonType.label: String
---
apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakClient
metadata:
  name: employee-app-tenant-manager
spec:
  realmId: rightcrowd-core
  clientId: employee-app-tenant-manager
  name: employee-app-tenant-manager
  pruneClient: false
  claimClient: true
  representation:
    description: A client allowing Employee App to authenticate and talk to Tenant
      Manager
    enabled: true
    serviceAccountsEnabled: true
    clientAuthenticatorType: client-secret
    defaultClientScopes:
    - profile
    - roles
    - offline_access
    redirectUris:
    - "/*"
    webOrigins:
    - "/*"
    protocol: openid-connect
---
apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakClient
metadata:
  name: grafana-oauth
spec:
  realmId: rightcrowd-core
  clientId: grafana-oauth
  name: grafana-oauth
  pruneClient: false
  claimClient: true
  representation:
    rootUrl: https://grafana.__HOSTNAME__
    adminUrl: https://grafana.__HOSTNAME__
    enabled: true
    clientAuthenticatorType: client-secret
    defaultClientScopes:
    - email
    - profile
    - roles
    - offline_access
    redirectUris:
    - https://grafana.__HOSTNAME__/login/generic_oauth
    webOrigins:
    - https://grafana.__HOSTNAME__
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    protocol: openid-connect
    # protocolMappers:
    # - name: client roles
    #   protocol: openid-connect
    #   protocolMapper: oidc-usermodel-client-role-mapper
    #   consentRequired: false
    #   config:
    #     multivalued: 'true'
    #     userinfo.token.claim: 'true'
    #     user.attribute: foo
    #     id.token.claim: 'true'
    #     access.token.claim: 'true'
    #     claim.name: resource_access.${client_id}.roles
    #     jsonType.label: String
---
apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakClient
metadata:
  name: oauth-proxy
spec:
  realmId: rightcrowd-core
  clientId: oauth-proxy
  name: oauth-proxy
  pruneClient: false
  claimClient: true
  representation:
    rootUrl: https://__HOSTNAME__
    adminUrl: https://__HOSTNAME__
    enabled: true
    clientAuthenticatorType: client-secret
    defaultClientScopes:
    - email
    - profile
    - roles
    - offline_access
    redirectUris:
    - https://__HOSTNAME__/oauth2/callback
    webOrigins:
    - https://__HOSTNAME__
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    protocol: openid-connect
    # protocolMappers:
    # - name: client roles
    #   protocol: openid-connect
    #   protocolMapper: oidc-usermodel-client-role-mapper
    #   consentRequired: false
    #   config:
    #     multivalued: 'true'
    #     userinfo.token.claim: 'true'
    #     user.attribute: foo
    #     id.token.claim: 'true'
    #     access.token.claim: 'true'
    #     claim.name: resource_access.${client_id}.roles
    #     jsonType.label: String
---
apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakClient
metadata:
  name: rightcrowd-ai
spec:
  realmId: rightcrowd-core
  clientId: rightcrowd-ai
  pruneClient: false
  claimClient: true
  representation:
    enabled: true
    redirectUris:
    - https://prompt.__HOSTNAME__/*
    webOrigins:
    - https://prompt.__HOSTNAME__
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    protocol: openid-connect
    authenticationFlowBindingOverrides: {}
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    # protocolMappers:
    # - name: client-group-mapper
    #   protocol: openid-connect
    #   protocolMapper: oidc-group-membership-mapper
    #   consentRequired: false
    #   config:
    #     full.path: 'true'
    #     id.token.claim: 'true'
    #     access.token.claim: 'true'
    #     userinfo.token.claim: 'true'
    #     multivalued: 'true'
    # - name: aud-mapper-client
    #   protocol: openid-connect
    #   protocolMapper: oidc-audience-mapper
    #   consentRequired: false
    #   config:
    #     included.client.audience: rightcrowd-ai
    #     id.token.claim: 'false'
    #     access.token.claim: 'true'
---
apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakClient
metadata:
  name: tenant-manager
spec:
  realmId: rightcrowd-core
  clientId: tenant-manager
  name: tenant-manager
  pruneClient: false
  claimClient: true
  representation:
    enabled: true
    clientAuthenticatorType: client-secret
    redirectUris:
    - "*"
    - https://tenant-manager.__HOSTNAME__/*
    webOrigins:
    - https://tenant-manager.__HOSTNAME__
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: false
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    authorizationServicesEnabled: true
    protocol: openid-connect
    defaultClientScopes:
    - profile
    - roles
    - offline_access
    # protocolMappers:
    # - name: groups
    #   protocol: openid-connect
    #   protocolMapper: oidc-usermodel-attribute-mapper
    #   consentRequired: false
    #   config:
    #     aggregate.attrs: 'false'
    #     userinfo.token.claim: 'false'
    #     multivalued: 'true'
    #     user.attribute: groups
    #     id.token.claim: 'false'
    #     access.token.claim: 'false'
    #     claim.name: groups
    #     jsonType.label: String
---
apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakClient
metadata:
  name: argocd
spec:
  realmId: rightcrowd-core
  clientId: argocd
  name: ArgoCD client
  pruneClient: false
  claimClient: true
  representation:
    rootUrl: https://argo.__HOSTNAME__
    adminUrl: https://argo.__HOSTNAME__
    baseUrl: "/applications"
    surrogateAuthRequired: false
    enabled: true
    alwaysDisplayInConsole: false
    clientAuthenticatorType: client-secret
    redirectUris:
    - https://argo.__HOSTNAME__/auth/callback
    webOrigins:
    - https://argo.__HOSTNAME__
    standardFlowEnabled: true
    implicitFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    publicClient: false
    frontchannelLogout: true
    protocol: openid-connect
    defaultClientScopes:
    - profile
    - roles
    - groups
    - email
---
apiVersion: k8s.rightcrowd.com/v1alpha1
kind: KeycloakClient
metadata:
  name: vault
spec:
  realmId: rightcrowd-core
  clientId: vault
  name: Hashicorp Vault
  pruneClient: false
  claimClient: true
  representation:
    description: ''
    rootUrl: https://vault.__HOSTNAME__
    adminUrl: https://vault.__HOSTNAME__
    baseUrl: ''
    surrogateAuthRequired: false
    enabled: true
    alwaysDisplayInConsole: false
    clientAuthenticatorType: client-secret
    redirectUris:
    - https://vault.__HOSTNAME__/ui/vault/auth/oidc/oidc/callback
    - https://vault.__HOSTNAME__/oidc/oidc/callback
    webOrigins:
    - https://vault.__HOSTNAME__
    standardFlowEnabled: true
    implicitFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    publicClient: false
    frontchannelLogout: true
    protocol: openid-connect
    attributes:
      oidc.ciba.grant.enabled: 'false'
      oauth2.device.authorization.grant.enabled: 'false'
      backchannel.logout.session.required: 'true'
      backchannel.logout.revoke.offline.tokens: 'false'
    authenticationFlowBindingOverrides: {}
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    defaultClientScopes:
    - profile
    - roles
    - offline_access
